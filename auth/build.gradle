apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'io.fabric'

android {
    compileSdkVersion project.ext.compileSdk
    buildToolsVersion "${project.ext.buildtools}"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion project.ext.targetSdk
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            testLogging {
                exceptionFormat = 'full'
            }
        }
    }
}


dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.2.0'
    testCompile 'org.robolectric:robolectric:3.1.2'
    // See https://github.com/robolectric/robolectric/issues/1932#issuecomment-219796474
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    
    compile 'com.facebook.android:facebook-android-sdk:4.14.1'
    compile("com.twitter.sdk.android:twitter:2.0.0@aar") {
        transitive = true;
    }
    compile "com.android.support:design:${project.ext.support_library_version}"

    compile "com.google.firebase:firebase-auth:${project.ext.firebase_version}"
    compile "com.google.android.gms:play-services-auth:${project.ext.firebase_version}"
}

checkstyle {
    configFile file('../common/checkstyle/checkstyle.xml')
    configProperties = ['checkstyle.java.header': file('../common/checkstyle/java.header').getAbsolutePath()]
    toolVersion = "6.11.2"
}

task checkAllSource(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    classpath = files(project.configurations.compile)
}

javadoc.exclude([
        'com/firebase/ui/auth/provider/**',
        'com/firebase/ui/auth/ui/ExtraConstants',
        'com/firebase/ui/auth/ui/email/field_validators/**',
        'com/firebase/ui/auth/util/**',
        ])
